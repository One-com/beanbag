{
  "author": {
    "name": "Andreas Lind Petersen",
    "email": "andreas@one.com"
  },
  "name": "passerror",
  "description": "Simple helper for handling error and success with two different callbacks",
  "version": "0.0.1",
  "repository": {
    "url": "git://github.com/papandreou/passerror"
  },
  "main": "lib/index.js",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "passError\n=========\n\nHandle success and failure with two different callbacks. Lets you get\nrid of most `if (err) return cb(err);` constructs.\n\n\nExample\n-------\n\nSend errors reported by `fs.readFile` straight to `cb`:\n\n```javascript\nvar passError = require('passerror'),\n    fs = require('fs');\n\nfunction getLines(fileName, cb) {\n    fs.readFile(fileName, 'utf-8', passError(cb, function (contents) {\n        cb(null, contents.split(/\\r?\\n|\\n?\\r/));\n    }));\n}\n```\n\n\nLicense\n-------\n\nLicensed under a standard 3-clause BSD license -- see the\n`LICENSE`-file for details.\n",
  "_id": "passerror@0.0.1",
  "_from": "passerror@=0.0.1"
}
